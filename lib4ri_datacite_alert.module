<?php

/**
 * Implements hook_menu().
 */
function lib4ri_datacite_alert_menu() {
    $items = array();
    
    $items['admin/islandora/datacite'] = array(
        'title' => 'Datacite alert',
        'description' => 'Configuring Datacite alert',
        'access arguments' => array('administer datacite'),
    );
    $items['admin/islandora/datacite/config'] = array(
        'title' => 'General configuration',
        'description' => 'Configuring Datacite alert',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('lib4ri_datacite_alert_form'),
        'access arguments' => array('administer datacite'),
        'file' => 'includes/forms.inc',
    );
    
    $items['admin/islandora/datacite/batch'] = array(
        'title' => 'Get data',
        'description' => 'Manage list update',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('lib4ri_datacite_alert_update_form'),
        'access arguments' => array('administer datacite'),
        'file' => 'includes/forms.inc',
    );
    
    $items['islandora/datacite/remarks'] = array(
        'page callback' => 'drupal_get_form',
        'page arguments' => array('lib4ri_datacite_alert_set_remarks_form'),
        'access arguments' => array('edit datacite entries'),
        'type' => MENU_CALLBACK,
        'file' => 'includes/forms.inc',
    );

    $items['islandora/datacite/add'] = array(
        'page callback' => 'lib4ri_datacite_alert_add_data',
        'access arguments' => array('edit datacite entries'),
        'type' => MENU_CALLBACK,
//        'file' => 'lib4ri_datacite_alert.module',
    );

    $items['islandora/datacite/del'] = array(
        'page callback' => 'lib4ri_datacite_alert_del_data',
        'access arguments' => array('edit datacite entries'),
        'type' => MENU_CALLBACK,
    );
    
    $items['islandora/datacite/check'] = array(
        'page callback' => 'lib4ri_datacite_alert_check_status',
        'access arguments' => array('edit datacite entries'),
        'type' => MENU_CALLBACK,
        //        'file' => 'lib4ri_datacite_alert.module',
    );

    $items['islandora/datacite/blacklist'] = array(
        'page callback' => 'lib4ri_datacite_alert_blacklist',
        'access arguments' => array('edit datacite entries'),
        'type' => MENU_CALLBACK,
        //        'file' => 'lib4ri_datacite_alert.module',
    );

    $items['islandora/datacite/single_pub'] = array(
        'page callback' => 'lib4ri_datacite_alert_fetch_single_pub',
        'access arguments' => array('edit datacite entries'),
        'type' => MENU_CALLBACK,
        //        'file' => 'lib4ri_datacite_alert.module',
    );
    
    $items['islandora/datacite/add_package_doi'] = array(
        'page callback' => 'lib4ri_datacite_alert_add_package_doi',
        'access arguments' => array('edit datacite entries'),
        'type' => MENU_CALLBACK,
        //        'file' => 'lib4ri_datacite_alert.module',
    );
    
    return $items;
}


/**
 * Implements hook_permission().
 */
function lib4ri_datacite_alert_permission() {
    return array(
        'access datacite data' => array(
            'title' => t('Access Datacite data'),
        ),
        'edit datacite entries' => array(
            'title' => t('Edit Datacite entries'),
        ),
        'administer datacite' => array(
            'title' => t('Administer Datacite data'),
        ),
    );
}


function lib4ri_datacite_alert_batch($params = NULL){
//    module_load_include('inc', 'lib4ri_datacite_alert', 'includes/queries');
    $batch = array(
        'operations' => array(
            //            array('publication_DB_scopus_alert', array()),
        ),
        'finished' => 'lib4ri_datacite_batch_finished',
        'title' => t('Fetching Datacite info'),
        'init_message' => t('Starting...'),
        'progress_message' => t('Processed @current out of @total.'),
        'error_message' => t('Example Batch has encountered an error.'),
        'file' => drupal_get_path('module', 'protein_db') . '/protein_db.module',
    );
    
    array_push($batch['operations'], array('lib4ri_datacite_alert_fetch', array($params)));
    
    batch_set($batch);
    
    // If this function was called from a form submit handler, stop here,
    // FAPI will handle calling batch_process().
    
    // If not called from a submit handler, add the following,
    // noting the url the user should be sent to once the batch
    // is finished.
    // IMPORTANT:
    // If you set a blank parameter, the batch_process() will cause an infinite loop
    
    batch_process();
}


function lib4ri_datacite_alert_fetch($params, &$context){
    if (!isset($context['sandbox']['progress'])) {
        $context['sandbox']['progress'] = 0;
        $context['sandbox']['current_node'] = 0;
        $context['sandbox']['max'] = 1;
    }
    
    module_load_include('inc', 'lib4ri_datacite_alert', 'includes/classes');
    $upd = new DataCiteRetrieval();
    $upd->setDefQuery()->setStartDate($params[0])->setEndDate($params[1])->setDateQuery();
    $upd->fetch()->filter()->update();
    
    $context['sandbox']['current_node']++;
    $context['sandbox']['progress']++;    
}


/**
 * Implements hook_views_api().
 */
function lib4ri_datacite_alert_views_api() {
    return array(
        'api' => 3,
        'path' => drupal_get_path('module', 'lib4ri_datacite_alert') . '/views',
    );
}


function lib4ri_datacite_alert_add_data($data = NULL){
    module_load_include('inc', 'lib4ri_datacite_alert', 'includes/define');
    
    /* ADD to MODS */
    if (is_array($data)){
        $datadoi = $data['DATADOI'];
        $id = $data['ID'];
        $pid = $data['PID'];
        $goto = $data['GOTO'];
    }
    else{
        $datadoi = trim($_GET['DATADOI'],'_'); 
        $id = trim($_GET['ID'],'_');
        $pid = trim($_GET['PID'],'_');
        $goto = $_SERVER['HTTP_REFERER'];
    }
    
    if(_lib4ri_datacite_alert_check_blacklisted($id)){
        drupal_set_message("($id) Data package $datadoi is marked as 'Do NOT Add' to object $pid", 'error');
        drupal_goto($goto);
//        drupal_goto('admin/islandora/lib4ri_datacite_alert/datacite-alert');
    }
    
    if(_lib4ri_datacite_alert_check_in_dora($pid,$datadoi)){
        drupal_set_message("($id) Data package $datadoi already in DORA object $pid", 'warning');
        drupal_goto($goto);
//        drupal_goto('admin/islandora/lib4ri_datacite_alert/datacite-alert');
    }
    
    _lib4ri_datacite_alert_add_to_dora($pid, $datadoi);
    
    
    if(_lib4ri_datacite_alert_check_in_dora($pid,$datadoi)){
        drupal_set_message("($id) Data package $datadoi added to DORA object $pid", 'status');
        db_update(LIB4RI_DATACITE_ALERT_DATA_TABLE)->fields(array('status' => 'In DORA'))->condition('id', $id, '=')->execute();
    }
    else{
        drupal_set_message("($id) Could not add package $datadoi to DORA object $pid", 'error');
    }
        
    /***************/
    drupal_goto($goto);
//    drupal_goto('admin/islandora/lib4ri_datacite_alert/datacite-alert');
    
}

function lib4ri_datacite_alert_del_data(){
    module_load_include('inc', 'lib4ri_datacite_alert', 'includes/define');
    
    $datadoi = trim($_GET['DATADOI'],'_');
    $pid = trim($_GET['PID'],'_');
    
    if(!_lib4ri_datacite_alert_check_in_dora($pid,strtolower($datadoi))){
        drupal_set_message("It seems that the package $datadoi is not in DORA object $pid", 'error');
        drupal_goto("islandora/object/$pid/lib4ri_datacite_alert");
    }
    
    $object = islandora_object_load($pid);
    $dataDois = lib4ri_datacite_alert_get_packages_in_mods($object);
    
    foreach ($dataDois as $doi){
        if (strtolower($doi->nodeValue) == strtolower($datadoi)){
            $doi->parentNode->removeChild($doi);
            $object['MODS']->content = $doi->ownerDocument->saveXML();
            break;
        }
    }
    
    if(!_lib4ri_datacite_alert_check_in_dora($pid,strtolower($datadoi))){
        drupal_set_message("Data package $datadoi deleted from DORA object $pid", 'status');
        db_update(LIB4RI_DATACITE_ALERT_DATA_TABLE)->fields(array('status' => ''))
        ->condition('pid', $pid, '=')
        ->condition('datadoi', strtolower($datadoi), '=')
        ->execute();
    }
    else{
        drupal_set_message("Cannot delete package $datadoi from DORA object $pid", 'error');
    }
    
    drupal_goto("islandora/object/$pid/lib4ri_datacite_alert");
    
    return;
}

function lib4ri_datacite_alert_check_status(){
    module_load_include('inc', 'lib4ri_datacite_alert', 'includes/define');
    
    $datadoi = trim($_GET['DATADOI'],'_');
    $id = trim($_GET['ID'],'_');
    $pid = trim($_GET['PID'],'_');
    $status = '';
        
    if(_lib4ri_datacite_alert_check_blacklisted($id)){
        drupal_set_message("($id) Data package $datadoi is marked as 'Do NOT Add' to object $pid", 'status');
        drupal_goto($_SERVER['HTTP_REFERER']);
//        drupal_goto('admin/islandora/lib4ri_datacite_alert/datacite-alert');
    }
    
    if(_lib4ri_datacite_alert_check_in_dora($pid,$datadoi)){
        drupal_set_message("($id) Data package $datadoi is in DORA object $pid", 'status');
        $status = 'In DORA';
    }
    else{
        drupal_set_message("($id) Data package $datadoi is NOT in DORA object $pid", 'warning');
    }
    
    db_update(LIB4RI_DATACITE_ALERT_DATA_TABLE)->fields(array('status' => $status))->condition('id', $id, '=')->execute();
    drupal_goto($_SERVER['HTTP_REFERER']);
//    drupal_goto('admin/islandora/lib4ri_datacite_alert/datacite-alert');
}

function lib4ri_datacite_alert_blacklist(){
    module_load_include('inc', 'lib4ri_datacite_alert', 'includes/define');
    $id = trim($_GET['ID'],'_');
    $datadoi = trim($_GET['DATADOI'],'_');
    $pid = trim($_GET['PID'],'_');
    
    if(_lib4ri_datacite_alert_check_in_dora($pid, $datadoi)){
        drupal_set_message("($id) Data package $datadoi is already in DORA object $pid", 'error');
    }
    elseif(_lib4ri_datacite_alert_check_blacklisted($id)){
        db_update(LIB4RI_DATACITE_ALERT_DATA_TABLE)->fields(array('status' => ''))->condition('id', $id, '=')->execute();
        drupal_set_message("($id) Status cleared", 'status');
    }
    else{
        db_update(LIB4RI_DATACITE_ALERT_DATA_TABLE)->fields(array('status' => 'Do NOT add'))->condition('id', $id, '=')->execute();
        drupal_set_message("($id) Data package $datadoi marked as 'Do NOT Add' to object $pid", 'status');
    }
    
    drupal_goto($_SERVER['HTTP_REFERER']);
//    drupal_goto('admin/islandora/lib4ri_datacite_alert/datacite-alert');
}

function _lib4ri_datacite_alert_check_in_dora($pid, $datadoi){
    module_load_include('inc', 'lib4ri_pub_db', 'utils/classes');
    $object = islandora_object_load($pid);
    $mods = $object['MODS']->content;
    $dom = new DOMDocument();
    $dom->loadXML($object['MODS']->content);
    
    $search_fetcher = new Lib4riReserchDataChecker();
    $search_fetcher->setDom($dom);
    
    return $search_fetcher->isDatapackageInMods($datadoi);
}

function _lib4ri_datacite_alert_add_to_dora($pid, $datadoi){
    module_load_include('inc', 'lib4ri_pub_db', 'utils/classes');
    $object = islandora_object_load($pid);
    $mods = $object['MODS']->content;
    $dom = new DOMDocument();
    $dom->loadXML($object['MODS']->content);
    
    $search_fetcher = new Lib4riReserchDataChecker();
    $search_fetcher->setDom($dom);
    $search_fetcher->IsDataSectionInMods(true);
    if(!$search_fetcher->isDatapackageInMods($datadoi)){
        $search_fetcher->addDatapackageToMods($datadoi);
    }
    
    $object['MODS']->content = $search_fetcher->getXML();
    
    return;
}

function _lib4ri_datacite_alert_check_blacklisted($id){
    $res = db_select(LIB4RI_DATACITE_ALERT_DATA_TABLE, 't')->fields('t', array('status'))->condition('id', $id, '=')->execute();
    
    foreach ($res as $status) {
        if ($status->status == 'Do NOT add'){
            return true;
        }
        return false;
    }
    
}

function lib4ri_datacite_alert_menu_alter(&$items) {
    $items['islandora/object/%islandora_object/lib4ri_datacite_alert'] = array(
        'title' => 'Data Packages Management',
        'page callback' => 'lib4ri_datacite_alert_data_packages_management',
        'page arguments' => array(2),
//        'access callback' => '',
        'access arguments' => array('edit datacite entries'),
        'type' => MENU_LOCAL_TASK,
//        'type' => MENU_CALLBACK,
//        'file' => '',
        'theme callback' => 'variable_get',
        'theme arguments' => array('admin_theme'),
        'weight' => 100,
    );
}

function lib4ri_datacite_alert_data_packages_management($object){
    module_load_include('inc', 'lib4ri_datacite_alert', 'includes/forms');
    global $base_url;
    $view = views_get_view('pub_datacite_packages');
    $display_id = 'default';
    $view->display['default']->display_options['filters']['pid_1']['value'] = $object->id;
    $content = $view->execute_display($display_id, NULL);
    
    
    
    $build['content'] = array(
//        'a' => array('#markup' =>"<form action=\"$base_url/islandora/datacite/add_package_doi?PID=$object->id\" method=\"post\">"),
        'doi' => drupal_get_form('lib4ri_datacite_alert_fetch_package_form'),
//        'doi' => array('#markup' => "<form action=\"$base_url/islandora/datacite/add_package_doi?PID=$object->id\" method=\"post\"><div class=\"form-item form-type-textfield\"><label>Data package DOI </label><input id=\"doi\" type=\"text\" size=\"60\" maxlength=\"192\" class=\"form-text\"></div><input class=\"form-submit\" type=\"submit\" value=\"Add data package\"></form>"),
        'inmods' => array('#markup' => lib4ri_datacite_alert_table_in_mods($object)),
//        'doi' => array('#markup' => '<br><hr><br><a href="#example">Add to MODS</a><br>'),
//        'check' => array('#markup' => "<br><hr><br><a href=\"$base_url/islandora/datacite/single_pub?PID=$object->id\">Update Datacite list</a><br><br>"),
        'sep' => array('#markup' => "<br><hr><br>"),
        'check' => array('#markup' => "<form action=\"$base_url/islandora/datacite/single_pub?PID=$object->id\" method=\"post\"><input class=\"form-submit\" type=\"submit\" value=\"Update Datacite list\"></form>"),
        'dummy' => array('#markup' => $content),
    );
    return $build;
}

function lib4ri_datacite_alert_get_packages_in_mods($object){
    $dom = new DOMDocument();
    $dom->loadXML($object['MODS']->content);
    $xpath = new DOMXPath($dom);
    $dataDois = $xpath->query('//mods:mods/mods:extension/mods:resource/mods:identifier [@identifierType="DOI"]' );
    
    return $dataDois;
}

function lib4ri_datacite_alert_table_in_mods($object){
    module_load_include('inc', 'lib4ri_datacite_alert', 'includes/queries');
    global $base_url;
    $dataDois = lib4ri_datacite_alert_get_packages_in_mods($object);
    
    if ($dataDois->length == 0){
        return '<br>NO Data Packages in MODS';
    }
    
    $output = '<table class="views-table"><thead><tr><th>DOI<th>Publisher<th>Publisher label<th>Alternate Identifiers<th></tr></thead><tbody>';
        
    $oddeven = array('odd', 'even');
    $count = 0;
    foreach ($dataDois as $doi){
        $altIds = $doi->parentNode->getElementsByTagName('alternateIdentifier');
        $publisher = $doi->parentNode->getElementsByTagName('publisher')->item(0)->nodeValue;
        $publisher_label = lib4ri_datacite_alert_get_publisher_label($publisher);
        $ids_markup = '';
        foreach ($altIds as $altId){
            $ids_markup .= "<a href=\"$altId->nodeValue\" target=\"_blank\">$altId->nodeValue</a><br>"; 
        }
        $ids_markup = str_lreplace('<br>', '', $ids_markup);
        $output .= "<tr class=\"".$oddeven[$count++%2]."\"><td><a href=\"https://doi.org/$doi->nodeValue\" target=\"_blank\">$doi->nodeValue</a><td>$publisher<td>$publisher_label<td>$ids_markup<td><a href=\"$base_url/islandora/datacite/del?PID=$object->id&DATADOI=$doi->nodeValue\">Delete</a></tr>";
    }
    
    $output .= "</tbody></table>";
    
    return $output;
}

function lib4ri_datacite_alert_fetch_single_pub(){
    module_load_include('inc', 'lib4ri_datacite_alert', 'includes/classes');
    $pid = trim($_GET['PID'],'_');  
    $object = islandora_object_load($pid);
    $dom = new DOMDocument();
    $dom->loadXML($object['MODS']->content);
    $xpath = new DOMXPath($dom);
    $doi = $xpath->query('//mods:mods/mods:identifier [@type="doi"]' )->item(0)->nodeValue;
    
    if ($doi == ''){
        drupal_set_message("No DOi found for DORA object $pid", 'error');
        drupal_goto($_SERVER['HTTP_REFERER']);
    }
    
    $upd = new DataCiteRetrieval();
    $upd->setDefQuery();
    $upd->setDoi($doi);
    $upd->setDoraPid($pid);
    $upd->fetch()->filter();
    $upd->update();
    
    $ntoadd = count($upd->getToAdd());
    if ($ntoadd == 0){
        $status = 'warning';
    }
    else {
        $status = 'status';
    }
    drupal_set_message("Found $ntoadd new data package(s) for DORA object $pid", $status);
    
    drupal_goto($_SERVER['HTTP_REFERER']);
}

/********************************************************************************/

function str_lreplace($search, $replace, $subject)
{
    $pos = strrpos($subject, $search);
    
    if($pos !== false)
    {
        $subject = substr_replace($subject, $replace, $pos, strlen($search));
    }
    
    return $subject;
}

/********************************************************************************/
/**
 * Implements hook_block_info().
 */
function lib4ri_datacite_alert_block_info(){
    $blocks['lib4ri_datacite_alert_res_data'] = array(
        // The name that will appear in the block list.
        'info' => t('Research Data'),
        // Default setting.
        'cache' => DRUPAL_NO_CACHE,
        'region' => 'sidebar_second',
        'status' => 1,
    );
    return $blocks;
}

/**
 * Implements hook_block_view().
 */
function lib4ri_datacite_alert_block_view($delta = ''){
    $block = [];
    switch ($delta) {
        case 'lib4ri_datacite_alert_res_data':
            module_load_include('inc', 'lib4ri_datacite_alert', 'includes/block');
            // See if there are results before rendering.
            $object = menu_get_object('islandora_object', 2);
            if ($object && in_array('ir:citationCModel', $object->models)) {
                $results = lib4ri_datacite_alert_get_packages_in_mods($object);
                if ($results && !empty($results) && ($results->length > 0)) {
                    $block['subject'] = t('Research Data:');
                    $block['content'] = array(
                        'related_research_data' => lib4ri_datacite_alert_get_research_data_block_content($results),
                    );
                }
            }
    }
    return $block;
}